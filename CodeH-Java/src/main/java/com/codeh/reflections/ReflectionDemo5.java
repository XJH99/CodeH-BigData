package com.codeh.reflections;


public class ReflectionDemo5 {
    public static void main(String[] args) {
        /**
         * 类加载的五个阶段：
         *      1.加载阶段Loading：jvm在该阶段的目的是将字节码从不同的数据源转化为二进制字节流加载到内存中，并生成一个代表该类的java.lang.class对象
         *      2.连接阶段（验证）：目的是为了确保class文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全（文件格式验证，元数据验证，字节码验证。。。。）
         *      3.连接阶段（准备）：jvm在该阶段对静态变量，分配内存并进行默认初始化（对应数据类型的默认初始化如0，0L，null，false等），这些变量所使用的内存都将在方法区中进行分配
         *      4.连接阶段（解析）：虚拟机将常量池内的符号引用替换为直接引用的过程
         *      5.初始化阶段：这个阶段才开始执行类中定义的代码，此阶段是执行<clinit>()方法的过程，该方法是由编译器按语句在源文件中出现的顺序，依次自动收集类中的所有静态变量的赋值动作
         */

    }
}
